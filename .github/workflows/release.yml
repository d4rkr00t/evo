name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'

      - uses: actions/setup-node@v1
        with:
            node-version: '16.15.1'

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.3.0

      - name: Cache evo
        uses: actions/cache@v2
        env:
          cache-name: cache-evo
        with:
          path: ./.evo_cache
          key: ${{ runner.OS }}-evo-cache-${{ hashFiles('./.evo_cache/evo_cache_key') }}
          restore-keys: |
            ${{ runner.OS }}-evo-cache-

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: ./node_modules
          key: ${{ runner.OS }}-nodemodules-cache-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-nodemodules-cache-

      - run: pnpm install
      - run: pnpm install @evobuild/cli@latest
      - run: ./node_modules/.bin/changeset version
      - run: git checkout **/*.md
      - run: git checkout .changeset
      - run: ./node_modules/.bin/evo run ci --since $(git describe --tags --abbrev=0) --ci

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@master
        with:
          # this expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm run ci:release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
